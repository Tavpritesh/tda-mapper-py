{"name":"Tda-mapper-py","tagline":"A straightforward implementation of the mapper construction by Carlsson--Memoli--Singh. (I wrote a little blog post about it at http://mapsfunctionsandarrows.blogspot.de)","body":"# TDA-Mapper-py\r\n\r\n[![Build Status](https://travis-ci.org/mirkoklukas/tda-mapper-py.svg?branch=master)](https://travis-ci.org/mirkoklukas/tda-mapper-py)\r\n\r\nA straightforward implementation of the mapper construction by Carlsson-Memoli-Singh. I wrote a little blog post about it at http://mapsfunctionsandarrows.blogspot.de\r\n\r\n## Example\r\n\r\n\r\n``` python\r\nfrom tdamapper.clusterfunctions import VietorisRipsClustering\r\nfrom tdamapper import mapper\r\nfrom tdamapper.referenceMap import create_functional_cover, coordinate_projection\r\nimport json\r\n\r\n# Example data set\r\nwith open(\"./example/dataset.json\") as f:\r\n\tdata = json.load(f);\r\n\tdata = [ tuple(p) for p in data ]\r\n\r\n# Gather the mapper input\r\nVR = VietorisRipsClustering(epsilon = 0.6) \r\nzAxis = coordinate_projection(axis=2, domain=data)\r\nfuncCover = create_functional_cover(endpoints=range(-12,12), overlap=0.5)\r\n\r\n# Run the alogrithm\r\nresult = mapper(VR, zAxis, funcCover)\r\n\r\n```\r\n\r\nBelow you see a visualization of the mapper result. The graph is colored by the values of ```zAxis```, the projection on the z-axis. The size of the nodes\r\nreflects the size of the associated clusters.\r\n\r\nThe take away should be that there are actually two separate branches growing out of a bigger cluster.\r\nYou shouldn't focus too much on the fact that the two branches cross each other. Although it reflects the reality of the situation pretty well, it is rather a bi-product of the fact that the data set lives in so few dimensions.  \r\n\r\n![The result of the mapper construction](https://raw.githubusercontent.com/mirkoklukas/tda-mapper-py/master/example/result.png \"The result of the mapper construction\")\r\n\r\nAnd indeed (what a terrible example it would have been if that was not the case) looking at a 3d plot of the original dataset we see that this reflects the shape pretty well. \r\n\r\n![An example data set](https://raw.githubusercontent.com/mirkoklukas/tda-mapper-py/master/example/dataset.png \"An example data set\")","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}